{
  "rules": {
    "posts": {
      ".read": true,
      "$postId": {
        ".write": "auth.uid === newData.child('userId').val() && !data.exists()",
        // Allow creates
        "userId": {
          ".validate": "newData.isString()"
        },
        "hero": {
          ".validate": "newData.isString()"
        },
        "description": {
          ".validate": "newData.isString()"
        },
        "youtubeId": {
          ".validate": "newData.isString()"
        },
        "votes": {
          ".validate": "newData.isNumber()  && ( (!data.exists() && newData.val() === 1) || newData.val() === data.val() + 1 || newData.val() === data.val() - 1)"
        },
        "$other": {
          ".validate": false
        }
      }
    },
    "comments": {
      ".read": true,
      "$postId": {
        ".validate": "root.child('posts').child($postId).exists()",
        // Check that the post exists
        "$commentId": {
          ".write": "(auth.uid === newData.child('author').child('uid').val() && !data.exists()) || (auth.uid === data.child('author').child('uid').val() && !newData.exists())",
          // Can only create or delete comments if you are the author
          "$other": {
            ".validate": false
          }
        }
      }
    },
    "votes": {
      ".read": true,
      "$postId": {
        ".validate": "root.child('posts').child($postId).exists()",
        // Check that the post exists
        "$uid": {
          ".write": "auth.uid === $uid",
          ".validate": "newData.val() === now"
        }
      }
    },
    "profile": {
      ".read": true,
      "$uid": {
        ".write": "auth.uid === $uid",
        "name": {
          ".validate": "newData.isString()"
        },
        "battletag": {
          ".validate": "newData.isString()"
        },
        "picture": {
          ".validate": "newData.isString()"
        },
        "onboarding": {
          ".validate": "newData.isBoolean()"
        },
        "posts": {
          "$postId": {
            ".validate": "newData.val() === true && newData.parent().parent().parent().parent().child('posts').child($postId).exists() && newData.parent().parent().parent().parent().child('posts').child($postId).child('userId').val() === $uid"
          }
        },
        "$other": {
          ".validate": false
        }
      }
    }
  }
}